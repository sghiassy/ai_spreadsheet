// let spreadsheetId = "idOfMySheet";
// let range = "nameOfSheet!A1";
// let valueInputOption = "RAW";
// let myValue = 5;

// let values = [[myValue]];
// let resource = {
//   values,
// };
// sheets.spreadsheets.values.update(
//   {
//     spreadsheetId,
//     range,
//     valueInputOption,
//     resource,
//   },
//   (err, result) => {
//     if (err) {
//       console.log(err);
//     } else {
//       console.log("%d cells updated.", result.updatedCells);
//     }
//   }
// );
import fs from "fs";
import { GoogleSpreadsheet } from "google-spreadsheet";
import { JWT } from "google-auth-library";

const cred = JSON.parse(fs.readFileSync("./credentials.json", "utf8"));

// Initialize auth - see https://theoephraim.github.io/node-google-spreadsheet/#/guides/authentication
const serviceAccountAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: cred.client_email,
  key: cred.private_key,
  scopes: ["https://www.googleapis.com/auth/spreadsheets"],
});

const doc = new GoogleSpreadsheet(
  "18_0zVG1l3-HIhPwvSuONZxqwrjOCRN2JYhiiByi06_s",
  serviceAccountAuth
);

await doc.loadInfo(); // loads document properties and worksheets
console.log(doc.title);
await doc.updateProperties({ title: "renamed doc" });

const sheet = doc.sheetsByIndex[0]; // or use `doc.sheetsById[id]` or `doc.sheetsByTitle[title]`
console.log(sheet.title);
console.log(sheet.rowCount);

await sheet.loadCells('D7:D7'); // load only D7 cell

const cell = sheet.getCell(6, 3); // get D7 cell, 0-based index
cell.value = cell.value + 1; // set the value
await sheet.saveUpdatedCells(); // save the changes
